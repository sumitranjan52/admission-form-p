{"version":3,"sources":["components/textinputlivefeedback/TextInputLiveFeedback.jsx","components/toast/AppToast.jsx","screens/admission/Admission.jsx","App.js","reportWebVitals.js","index.js"],"names":["TextInputLiveFeedback","label","helpText","props","useField","field","meta","useState","didFocus","setDidFocus","handleFocus","showFeedback","value","trim","length","touched","inputField","type","Input","aria-describedby","id","onFocus","options","map","option","index","display","className","error","FormGroup","Label","for","aria-live","FormText","color","AppToast","title","time","body","background","autoClose","isOpen","close","handleOpen","toastClass","timeOut","setTimeout","clearTimeout","role","aria-atomic","style","position","bottom","right","opacity","zIndex","aria-label","onClick","aria-hidden","Admission","toastOpen","setToastOpen","formik","useFormik","initialValues","session","doa","branch","medium","referredBy","referrenceNo","enrollNo","rollNo","feeMode","courseFee","fee","course","subject","name","father","mother","dob","occupation","address","mobile","gender","email","collage","remark","onSubmit","onReset","validationSchema","Yup","min","max","required","matches","Container","Jumbotron","textAlign","marginBottom","paddingTop","paddingBottom","values","Row","Col","md","size","Button","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e59723.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { FormGroup, Label, Input, FormText } from \"reactstrap\";\r\n\r\nimport \"./TextInputLiveFeedback.css\";\r\n\r\nexport default function TextInputLiveFeedback({ label, helpText, ...props }) {\r\n  const [field, meta] = useField(props);\r\n  const [didFocus, setDidFocus] = useState(false);\r\n  const handleFocus = () => setDidFocus(true);\r\n  const showFeedback =\r\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\r\n\r\n  let inputField = null;\r\n  if (\r\n    props.type === \"text\" ||\r\n    props.type === \"number\" ||\r\n    props.type === \"password\" ||\r\n    props.type === \"email\" ||\r\n    props.type === \"textarea\"\r\n  ) {\r\n    inputField = (\r\n      <Input\r\n        {...props}\r\n        {...field}\r\n        aria-describedby={`${props.id}-feedback ${props.id}-help`}\r\n        onFocus={handleFocus}\r\n      />\r\n    );\r\n  } else if (props.type === \"select\") {\r\n    inputField = (\r\n      <Input\r\n        {...props}\r\n        {...field}\r\n        aria-describedby={`${props.id}-feedback ${props.id}-help`}\r\n        onFocus={handleFocus}\r\n      >\r\n        <option value=\"\">Select</option>\r\n        {props.options &&\r\n          props.options.map((option, index) => {\r\n            return (\r\n              <option key={index} value={option.value}>\r\n                {option.display}\r\n              </option>\r\n            );\r\n          })}\r\n      </Input>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`text-input-container ${\r\n        showFeedback ? (meta.error ? \"invalid\" : \"valid\") : \"\"\r\n      }`}\r\n    >\r\n      <FormGroup>\r\n        <div className=\"flex items-center space-between\">\r\n          <Label for={props.id}>{label}</Label>\r\n          {showFeedback ? (\r\n            <div\r\n              id={`${props.id}-feedback`}\r\n              aria-live=\"polite\"\r\n              className=\"feedback text-sm\"\r\n            >\r\n              {meta.error ? meta.error : \"âœ“\"}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {inputField}\r\n        {helpText ? <FormText color=\"muted\">{helpText} </FormText> : null}\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AppToast({\r\n  title,\r\n  time,\r\n  body,\r\n  background,\r\n  autoClose,\r\n  isOpen = false,\r\n  close = true,\r\n  handleOpen,\r\n  ...props\r\n}) {\r\n  let toastClass = \"toast\";\r\n  if (background) toastClass = \"toast bg-\" + background;\r\n  if (autoClose) {\r\n    let timeOut = setTimeout(function () {\r\n      handleOpen(false);\r\n      clearTimeout(timeOut);\r\n    }, autoClose);\r\n  }\r\n  return (\r\n    isOpen && (\r\n      <div\r\n        className={toastClass}\r\n        role=\"alert\"\r\n        aria-live=\"assertive\"\r\n        aria-atomic=\"true\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: 0,\r\n          right: \"12px\",\r\n          opacity: 1,\r\n          zIndex: 5,\r\n          ...props.style,\r\n        }}\r\n      >\r\n        <div className=\"toast-header\">\r\n          {title && <strong className=\"mr-auto\">{title}</strong>}\r\n          {time && <small>{time}</small>}\r\n          {close && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"ml-2 mb-1 close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => handleOpen(!isOpen)}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {body && <div className=\"toast-body\">{body}</div>}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useFormik, FormikProvider, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Container, Row, Col, Button, Jumbotron } from \"reactstrap\";\r\n\r\nimport TextInputLiveFeedback from \"../../components/textinputlivefeedback/TextInputLiveFeedback\";\r\nimport \"./Admission.css\";\r\nimport AppToast from \"../../components/toast/AppToast\";\r\n\r\nexport default function Admission() {\r\n  const [toastOpen, setToastOpen] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      session: \"\",\r\n      doa: \"\",\r\n      branch: \"\",\r\n      medium: \"\",\r\n      referredBy: \"\",\r\n      referrenceNo: \"\",\r\n      enrollNo: \"\",\r\n      rollNo: \"\",\r\n      feeMode: \"\",\r\n      courseFee: \"\",\r\n      fee: \"\",\r\n      course: \"\",\r\n      subject: \"\",\r\n      name: \"\",\r\n      father: \"\",\r\n      mother: \"\",\r\n      dob: \"\",\r\n      occupation: \"\",\r\n      address: \"\",\r\n      mobile: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      collage: \"\",\r\n      remark: \"\",\r\n    },\r\n    onSubmit: () => {\r\n      setToastOpen(true);\r\n    },\r\n    onReset: () => {\r\n      setToastOpen(false);\r\n    },\r\n    validationSchema: Yup.object({\r\n      session: Yup.string()\r\n        .min(5, \"Must be at least 5 characters\")\r\n        .max(20, \"Must be less  than 20 characters\")\r\n        .required(\"Session is required\")\r\n        .matches(/^[0-9]+$/, \"Only number is allowed\"),\r\n      doa: Yup.string()\r\n        .required(\"Date of Admission is required\")\r\n        .matches(\r\n          /^((0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-[12]\\d{3})$/,\r\n          \"DD-MM-YYYY format is only allowed\"\r\n        ),\r\n      branch: Yup.string()\r\n        .min(2, \"Must be at least 5 characters\")\r\n        .max(20, \"Must be less  than 20 characters\")\r\n        .required(\"Branch is required\"),\r\n      medium: Yup.string(),\r\n      referredBy: Yup.string(),\r\n      referrenceNo: Yup.string(),\r\n      enrollNo: Yup.string(),\r\n      rollNo: Yup.string().matches(/^[0-9]+$/, \"Only number is allowed\"),\r\n      feeMode: Yup.string(),\r\n      courseFee: Yup.string().matches(/^[0-9]+$/, \"Only number is allowed\"),\r\n      fee: Yup.string().matches(/^[0-9]+$/, \"Only number is allowed\"),\r\n      course: Yup.string(),\r\n      subject: Yup.string(),\r\n      name: Yup.string()\r\n        .min(3, \"Must be at least 3 characters\")\r\n        .max(50, \"Must be less  than 50 characters\")\r\n        .required(\"Name is required\")\r\n        .matches(/^[a-zA-Z ]+$/, \"Only alphabet and space is allowed\"),\r\n      father: Yup.string()\r\n        .min(3, \"Must be at least 3 characters\")\r\n        .max(50, \"Must be less  than 50 characters\")\r\n        .required(\"Father Name is required\")\r\n        .matches(/^[a-zA-Z ]+$/, \"Only alphabet and space is allowed\"),\r\n      mother: Yup.string()\r\n        .min(3, \"Must be at least 3 characters\")\r\n        .max(50, \"Must be less  than 50 characters\")\r\n        .required(\"Mother Name is required\")\r\n        .matches(/^[a-zA-Z ]+$/, \"Only alphabet and space is allowed\"),\r\n      dob: Yup.string()\r\n        .required(\"Date of Birth is required\")\r\n        .matches(\r\n          /^((0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-[12]\\d{3})$/,\r\n          \"DD-MM-YYYY format is only allowed\"\r\n        ),\r\n      occupation: Yup.string(),\r\n      address: Yup.string(),\r\n      mobile: Yup.string()\r\n        .required(\"Phone or Mobile is required\")\r\n        .min(10, \"Must be at least 10 characters\")\r\n        .max(12, \"Must be less  than 12 characters\")\r\n        .matches(/^[0-9]+$/, \"Only number is allowed\"),\r\n      gender: Yup.string().required(\"Gender is required\"),\r\n      email: Yup.string()\r\n        .email(\"Email should be in valid email format\")\r\n        .min(5, \"Must be at least 5 characters\")\r\n        .max(100, \"Must be less  than 100 characters\"),\r\n      collage: Yup.string(),\r\n      remark: Yup.string(),\r\n    }),\r\n  });\r\n  return (\r\n    <Container>\r\n      <Jumbotron\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginBottom: 0,\r\n          paddingTop: \"1rem\",\r\n          paddingBottom: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 className=\"display-4\">University Admission Form</h1>\r\n        <p className=\"lead\">\r\n          Fill the below form for becoming eligible to get admission into the\r\n          University.\r\n        </p>\r\n      </Jumbotron>\r\n      <AppToast\r\n        isOpen={toastOpen}\r\n        title=\"Form Submitted!\"\r\n        background=\"success\"\r\n        body={`Admission form successfully submitted for ${formik.values.name}`}\r\n        handleOpen={setToastOpen}\r\n      />\r\n      <FormikProvider value={formik}>\r\n        <Form>\r\n          <Row className=\"Container\">\r\n            <Col md={{ size: 6 }}>\r\n              <span className=\"text-muted\">\r\n                Fields marked with * are required.\r\n              </span>\r\n              <h4>Session Details</h4>\r\n              <hr />\r\n              <TextInputLiveFeedback\r\n                label=\"* Session\"\r\n                id=\"session\"\r\n                name=\"session\"\r\n                type=\"text\"\r\n                helpText=\"Must be 5-20 characters and cannot contain alphabet or special characters.\"\r\n              />\r\n              <TextInputLiveFeedback\r\n                label=\"* Date of Admission\"\r\n                id=\"doa\"\r\n                name=\"doa\"\r\n                type=\"text\"\r\n                helpText=\"Must be in date format DD-MM-YYYY\"\r\n              />\r\n              <TextInputLiveFeedback\r\n                label=\"* Branch\"\r\n                id=\"branch\"\r\n                name=\"branch\"\r\n                type=\"select\"\r\n                helpText=\"Must be 2-20 characters\"\r\n                options={[\r\n                  { value: \"b1\", display: \"Branch 1\" },\r\n                  { value: \"b2\", display: \"Branch 2\" },\r\n                  { value: \"b3\", display: \"Branch 3\" },\r\n                ]}\r\n              />\r\n              <TextInputLiveFeedback\r\n                label=\"Medium\"\r\n                id=\"medium\"\r\n                name=\"medium\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Referred By\"\r\n                id=\"referredBy\"\r\n                name=\"referredBy\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Referrence Number\"\r\n                id=\"referrenceNo\"\r\n                name=\"referrenceNo\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Enrollment Number\"\r\n                id=\"enrollNo\"\r\n                name=\"enrollNo\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Roll Number\"\r\n                id=\"rollNo\"\r\n                name=\"rollNo\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Fee Mode\"\r\n                id=\"feeMode\"\r\n                name=\"feeMode\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Course Fee\"\r\n                id=\"courseFee\"\r\n                name=\"courseFee\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Fee\"\r\n                id=\"fee\"\r\n                name=\"fee\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <h4>Course Applied Details</h4>\r\n              <hr />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Course\"\r\n                id=\"course\"\r\n                name=\"course\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Subject\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n            <Col md={{ size: 6 }}>\r\n              <h4>Basic Details</h4>\r\n              <hr />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Name\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                helpText=\"Must be 3-50 characters and can contain alphabet and space.\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Father Name\"\r\n                id=\"father\"\r\n                name=\"father\"\r\n                type=\"text\"\r\n                helpText=\"Must be 3-50 characters and can contain alphabet and space.\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Mother Name\"\r\n                id=\"mother\"\r\n                name=\"mother\"\r\n                type=\"text\"\r\n                helpText=\"Must be 3-50 characters and can contain alphabet and space.\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Date of Birth\"\r\n                id=\"dob\"\r\n                name=\"dob\"\r\n                type=\"text\"\r\n                helpText=\"Must be in date format DD-MM-YYYY\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Occupation\"\r\n                id=\"occupation\"\r\n                name=\"occupation\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Adress\"\r\n                id=\"address\"\r\n                name=\"address\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Phone or Mobile\"\r\n                id=\"mobile\"\r\n                name=\"mobile\"\r\n                type=\"text\"\r\n                helpText=\"Must be 10-12 characters and can only contain numbers.\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"* Gender\"\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                type=\"select\"\r\n                options={[\r\n                  { value: \"F\", display: \"Female\" },\r\n                  { value: \"M\", display: \"Male\" },\r\n                  { value: \"O\", display: \"Other\" },\r\n                ]}\r\n              />\r\n\r\n              <h4>Other Details</h4>\r\n              <hr />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Collage\"\r\n                id=\"collage\"\r\n                name=\"collage\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextInputLiveFeedback\r\n                label=\"Remark\"\r\n                id=\"remark\"\r\n                name=\"remark\"\r\n                type=\"textarea\"\r\n              />\r\n              <div className=\"flex space-between\">\r\n                <Button type=\"reset\">Clear</Button>\r\n                <Button color=\"success\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Admission from \"./screens/admission/Admission\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Admission />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}